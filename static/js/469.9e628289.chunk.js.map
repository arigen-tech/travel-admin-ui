{"version":3,"file":"static/js/469.9e628289.chunk.js","mappings":"+MASA,MAofA,EApfgBA,KACd,MAAOC,EAAUC,IAAeC,EAAAA,EAAAA,UAAS,CACvCC,cAAe,GACfC,SAAU,MAELC,EAAUC,IAAeJ,EAAAA,EAAAA,WAAS,IAClCK,EAAOC,IAAYN,EAAAA,EAAAA,UAAS,KAC5BO,EAAcC,IAAmBR,EAAAA,EAAAA,UAAS,KAC1CS,EAAQC,IAAaV,EAAAA,EAAAA,UAAS,OAC9BW,EAAUC,IAAeZ,EAAAA,EAAAA,WAAS,IAClCa,EAAaC,IAAkBd,EAAAA,EAAAA,UAAS,IACxCe,EAAWC,IAAgBhB,EAAAA,EAAAA,UAAS,KACpCiB,EAASC,IAAclB,EAAAA,EAAAA,WAAS,IAEhCmB,EAAYC,IAAiBpB,EAAAA,EAAAA,UAAS,IACtCqB,EAAaC,IAAkBtB,EAAAA,EAAAA,UAAS,KACxCuB,EAAkBC,IAAuBxB,EAAAA,EAAAA,WAAS,IAClDyB,EAAcC,IAAmB1B,EAAAA,EAAAA,UAAS,OAC1C2B,EAAWC,IAAgB5B,EAAAA,EAAAA,WAAS,IACpC6B,EAAUC,IAAe9B,EAAAA,EAAAA,UAAS,IAEnC+B,EAAiBC,UACrBd,GAAW,GACX,IACE,MAAMe,QAAaC,EAAAA,EAAAA,IAAWC,EAAAA,IACV,MAAhBF,EAAKG,QAAkBC,MAAMC,QAAQL,EAAKM,WAC5CvB,EAAaiB,EAAKM,UAClBnB,EAAcoB,KAAKC,KAAKR,EAAKM,SAASG,OAdrB,OAgBjBC,QAAQC,MAAM,kCAAmCX,GACjDjB,EAAa,IACbI,EAAc,GAElB,CAAE,MAAOwB,GACPD,QAAQC,MAAM,6BAA8BA,EAC9C,CAAC,QACC1B,GAAW,EACb,IAGF2B,EAAAA,EAAAA,YAAU,KACRd,GAAgB,GACf,KAEHc,EAAAA,EAAAA,YAAU,KACR/B,EAAe,EAAE,GAChB,CAACO,IAEJ,MAAMyB,EAAY,SAACC,GACjBvC,EAAgB,CACduC,UACAC,KAH4BC,UAAAP,OAAA,QAAAQ,IAAAD,UAAA,GAAAA,UAAA,GAAG,OAI/BE,QAASA,KACP3C,EAAgB,KAAK,GAG3B,EAyCM4C,EAAqBC,IACzB,MAAM,GAAEC,EAAE,MAAEC,GAAUF,EAAEG,OACb,WAAPF,EACFhC,EAAeiC,GAEfxD,GAAa0D,IAAQC,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GAAWD,GAAQ,IAAE,CAACH,GAAKC,KAClD,EA+GII,GAhBmBC,EAgBkB7C,EAfpCM,EAAYwC,OAEVD,EAAWE,QAAQC,IAAU,IAADC,EAAAC,EACjC,MAAMhE,GAAkC,QAAlB+D,EAAAD,EAAK9D,qBAAa,IAAA+D,OAAA,EAAlBA,EAAoBE,gBAAiB,GACrDhE,EAAWiE,OAAOJ,EAAK7D,UAAY,IAAIgE,cACvC9B,GAAoB,QAAX6B,EAAAF,EAAK3B,cAAM,IAAA6B,OAAA,EAAXA,EAAaC,gBAAiB,GAE7C,OACEjE,EAAcmE,SAAS/C,EAAY6C,gBACnChE,EAASkE,SAAS/C,EAAY6C,gBAC9B9B,EAAOgC,SAAS/C,EAAY6C,cAAc,IAVdN,GADTA,MAiBzB,MAAMS,EAAwBV,EAAmBjB,OAC3C4B,EAAqB9B,KAAKC,KAAK4B,EA3Md,IA4MjBE,EA5MiB,GA4MM1D,EACvB2D,EAAwBD,EA7MP,GA8MjBE,EAAoBd,EAAmBe,MAC3CF,EACAD,GAIF,OACEI,EAAAA,EAAAA,MAAA,OAAKC,UAAU,kBAAiBC,SAAA,EAC9BC,EAAAA,EAAAA,KAAA,OAAKF,UAAU,MAAKC,UAClBF,EAAAA,EAAAA,MAAA,OAAKC,UAAU,kCAAiCC,SAAA,CAC7CtE,IACCuE,EAAAA,EAAAA,KAACC,EAAAA,EAAK,CACJhC,QAASxC,EAAawC,QACtBC,KAAMzC,EAAayC,KACnBG,QAAS5C,EAAa4C,WAG1BwB,EAAAA,EAAAA,MAAA,OAAKC,UAAU,iBAAgBC,SAAA,EAC7BF,EAAAA,EAAAA,MAAA,OAAKC,UAAU,gEAA+DC,SAAA,EAC5EC,EAAAA,EAAAA,KAAA,MAAIF,UAAU,aAAYC,SAAC,gBAC3BC,EAAAA,EAAAA,KAAA,OAAAD,SACIlE,GA+BAgE,EAAAA,EAAAA,MAAA,UACE3B,KAAK,SACL4B,UAAU,oBACVI,QAASA,IAAMpE,GAAY,GAAOiE,SAAA,EAElCC,EAAAA,EAAAA,KAAA,KAAGF,UAAU,uBAAyB,YAnCxCD,EAAAA,EAAAA,MAAAM,EAAAA,SAAA,CAAAJ,SAAA,EACEC,EAAAA,EAAAA,KAAA,QAAMF,UAAU,4BAA4BM,KAAK,SAAQL,UACvDF,EAAAA,EAAAA,MAAA,OAAKC,UAAU,0BAAyBC,SAAA,EACtCC,EAAAA,EAAAA,KAAA,SACE9B,KAAK,SACL4B,UAAU,eACVO,YAAY,SACZ,aAAW,SACX,mBAAiB,cACjB7B,GAAG,SACHC,MAAOlC,EACP+D,SAAUhC,KAEZ0B,EAAAA,EAAAA,KAAA,QAAMF,UAAU,mBAAmBtB,GAAG,cAAauB,UACjDC,EAAAA,EAAAA,KAAA,KAAGF,UAAU,4BAInBD,EAAAA,EAAAA,MAAA,UACE3B,KAAK,SACL4B,UAAU,uBACVI,QAASA,IAAMpE,GAAY,GAAMiE,SAAA,EAEjCC,EAAAA,EAAAA,KAAA,KAAGF,UAAU,iBAAmB,cAElCD,EAAAA,EAAAA,MAAA,UAAQ3B,KAAK,SAAS4B,UAAU,uBAAsBC,SAAA,EACpDC,EAAAA,EAAAA,KAAA,KAAGF,UAAU,oBAAsB,uBAc7CE,EAAAA,EAAAA,KAAA,OAAKF,UAAU,YAAWC,SACtBlE,GAqHAmE,EAAAA,EAAAA,KAAAG,EAAAA,SAAA,CAAAJ,SACGlE,IACCgE,EAAAA,EAAAA,MAAA,QACEC,UAAU,YACVS,SACElF,EAhSS6B,UAC7BqB,EAAEiC,iBACF,IACE,MAAM/C,QAAiBgD,EAAAA,EAAAA,IAAW,GAADC,OAAIC,EAAAA,GAAU,KAAAD,OAAI/E,GAAUX,GACrC,MAApByC,EAASH,QACXU,GACU,OAARP,QAAQ,IAARA,OAAQ,EAARA,EAAUQ,UAAW,kCACrB,WAEFhB,IACAnB,GAAY,GACZR,GAAY,GACZM,EAAU,MACVX,EAAY,CAAEE,cAAe,GAAIC,SAAU,MAE3C4C,GACU,OAARP,QAAQ,IAARA,OAAQ,EAARA,EAAUQ,UAAW,gDACrB,QAGN,CAAE,MAAOH,GAAQ,IAAD8C,EACd/C,QAAQC,MAAM,4BAA6BA,GAC3CE,GACO,OAALF,QAAK,IAALA,GAAe,QAAV8C,EAAL9C,EAAOL,gBAAQ,IAAAmD,OAAV,EAALA,EAAiB3C,UACf,kDACF,QAEJ,GArF6Bf,UAG7B,GAFAqB,EAAEiC,iBAEExF,EAASG,eAAiBH,EAASI,SAAU,CAC/C,MAAMyF,EAAe,CACnB1F,cAAeH,EAASG,cACxBC,SAAUJ,EAASI,UAGrB,IACE,MAAMqC,QAAiBqD,EAAAA,EAAAA,IAAYH,EAAAA,GAAYE,GAEvB,MAApBpD,EAASH,QACXU,EACEP,EAASQ,SAAW,gCACpB,WAEFhD,EAAY,CAAEE,cAAe,GAAIC,SAAU,KAC3CU,GAAY,GACZmB,KAEAe,EACEP,EAASQ,SAAW,6CACpB,QAGN,CAAE,MAAOH,GAAQ,IAADiD,EACdlD,QAAQC,MAAM,0BAA2BA,GACzCE,GACgB,QAAd+C,EAAAjD,EAAML,gBAAQ,IAAAsD,OAAA,EAAdA,EAAgB9C,UACd,gDACF,QAEJ,CACF,MACE+C,MAAM,uCACR,EAyTmBjB,SAAA,EAEDF,EAAAA,EAAAA,MAAA,OAAKC,UAAU,sBAAqBC,SAAA,EAClCF,EAAAA,EAAAA,MAAA,SAAOoB,QAAQ,gBAAelB,SAAA,CAAC,oBACbC,EAAAA,EAAAA,KAAA,QAAMF,UAAU,cAAaC,SAAC,UAEhDC,EAAAA,EAAAA,KAAA,SACE9B,KAAK,OACLgD,UAAQ,EACRpB,UAAU,eACVtB,GAAG,gBACH6B,YAAY,kBACZC,SAAUhC,EACVG,MAAOzD,EAASG,oBAGpB0E,EAAAA,EAAAA,MAAA,OAAKC,UAAU,sBAAqBC,SAAA,EACpCF,EAAAA,EAAAA,MAAA,SAAAE,SAAA,CAAO,gBACSC,EAAAA,EAAAA,KAAA,QAAMF,UAAU,eAAcC,SAAC,UAE7CC,EAAAA,EAAAA,KAAA,SACE9B,KAAK,OACLgD,UAAQ,EACRpB,UAAU,eACVtB,GAAG,WACH6B,YAAY,cACZC,SAAUhC,EACVG,MAAOzD,EAASI,eAIpByE,EAAAA,EAAAA,MAAA,OAAKC,UAAU,kDAAiDC,SAAA,EAC9DC,EAAAA,EAAAA,KAAA,UACE9B,KAAK,SACL4B,UAAU,uBACVqB,UAAWnG,EAASG,cAAc4E,SAEjC1E,EAAW,eAAiB,YAE/B2E,EAAAA,EAAAA,KAAA,UACE9B,KAAK,SACL4B,UAAU,iBACVI,QAASA,IAAMpE,GAAY,GAAOiE,SACnC,oBAvKTF,EAAAA,EAAAA,MAAAM,EAAAA,SAAA,CAAAJ,SAAA,CACG5D,GACC6D,EAAAA,EAAAA,KAAA,OAAAD,SAAK,gBAELC,EAAAA,EAAAA,KAAA,OAAKF,UAAU,+BAA8BC,UAC3CF,EAAAA,EAAAA,MAAA,SAAOC,UAAU,gDAA+CC,SAAA,EAC9DC,EAAAA,EAAAA,KAAA,SAAOF,UAAU,cAAaC,UAC5BF,EAAAA,EAAAA,MAAA,MAAAE,SAAA,EACEC,EAAAA,EAAAA,KAAA,MAAAD,SAAI,aACJC,EAAAA,EAAAA,KAAA,MAAAD,SAAI,UACJC,EAAAA,EAAAA,KAAA,MAAAD,SAAI,iBACJC,EAAAA,EAAAA,KAAA,MAAAD,SAAI,UACJC,EAAAA,EAAAA,KAAA,MAAAD,SAAI,iBAGRC,EAAAA,EAAAA,KAAA,SAAAD,SACGJ,EAAkB/B,OAAS,EAC1B+B,EAAkByB,KAAI,CAACnC,EAAMoC,KAC3BxB,EAAAA,EAAAA,MAAA,MAAAE,SAAA,EACEC,EAAAA,EAAAA,KAAA,MAAAD,SAAKL,EAAwB2B,EAAQ,KACrCrB,EAAAA,EAAAA,KAAA,MAAAD,SAAKd,EAAK9D,iBACV6E,EAAAA,EAAAA,KAAA,MAAAD,SAAKd,EAAK7D,YACV4E,EAAAA,EAAAA,KAAA,MAAAD,UACEC,EAAAA,EAAAA,KAAA,UACEF,UAAS,+BAAAY,OACS,MAAhBzB,EAAK3B,OAAiB,WAAa,IAErC6D,SAA0B,MAAhBlC,EAAK3B,OACf4C,QAASA,KACa,MAAhBjB,EAAK3B,QA9MzB2B,KAClBhE,EAAY,CACVE,cAAe8D,EAAK9D,cACpBC,SAAU6D,EAAK7D,WAEjBQ,EAAUqD,EAAKT,IACflD,GAAY,GACZQ,GAAY,EAAK,EAwMmBwF,CAAWrC,EACb,EACAc,UAEFC,EAAAA,EAAAA,KAAA,KAAGF,UAAU,qCAGjBE,EAAAA,EAAAA,KAAA,MAAAD,UACEF,EAAAA,EAAAA,MAAA,OAAKC,UAAU,yBAAwBC,SAAA,EACrCC,EAAAA,EAAAA,KAAA,SACEF,UAAU,mBACV5B,KAAK,WACLqD,QAAyB,MAAhBtC,EAAK3B,OACdgD,SAAUA,KACRkB,OArLVhD,EAsLYS,EAAKT,GAtLblB,EAuLwB,MAAhB2B,EAAK3B,OAvLLnC,EAwLA8D,EAAK9D,cAvL3CyB,EAAgB4B,GAChB1B,EAAaQ,GACbN,EAAY7B,QACZuB,GAAoB,GAJK8E,IAAChD,EAAIlB,EAAQnC,CA0LH,KAEH6E,EAAAA,EAAAA,KAAA,SAAOF,UAAU,wBAAuBC,SACrB,MAAhBd,EAAK3B,OACF,SACA,uBApCH2B,EAAKT,OA2ChBwB,EAAAA,EAAAA,KAAA,MAAAD,UACEC,EAAAA,EAAAA,KAAA,MAAIyB,QAAQ,IAAI3B,UAAU,cAAaC,SAAC,yCASpDF,EAAAA,EAAAA,MAAA,OAAKC,UAAU,yDAAwDC,SAAA,EACrEC,EAAAA,EAAAA,KAAA,OAAAD,UACEF,EAAAA,EAAAA,MAAA,QAAAE,SAAA,CAAM,QACEhE,EAAY,OAAKM,EAAW,qBAAmB,IACpDJ,EAAU2B,aAGfiC,EAAAA,EAAAA,MAAA,MAAIC,UAAU,kBAAiBC,SAAA,EAC7BC,EAAAA,EAAAA,KAAA,MACEF,UAAS,aAAAY,OACS,IAAhB3E,EAAoB,WAAa,IAChCgE,UAEHC,EAAAA,EAAAA,KAAA,UAAQF,UAAU,YAAYI,QArL7BwB,KACjB3F,EAAc,GAChBC,EAAeD,EAAc,EAC/B,EAkL0EgE,SAAC,WAIxD,IAAIxC,MAAMlB,IAAa+E,KAAI,CAACO,EAAGN,KAC9BrB,EAAAA,EAAAA,KAAA,MACEF,UAAS,aAAAY,OACP3E,IAAgBsF,EAAQ,EAAI,SAAW,IACtCtB,UAGHC,EAAAA,EAAAA,KAAA,UACEF,UAAU,YACVI,QAASA,IAAMlE,EAAeqF,EAAQ,GAAGtB,SAExCsB,EAAQ,KANNA,MAUTrB,EAAAA,EAAAA,KAAA,MACEF,UAAS,aAAAY,OACP3E,IAAgBM,EAAa,WAAa,IACzC0D,UAEHC,EAAAA,EAAAA,KAAA,UAAQF,UAAU,YAAYI,QAvMjC0B,KACb7F,EAAcyD,GAChBxD,EAAeD,EAAc,EAC/B,EAoMsEgE,SAAC,8BAuEpEtD,IACCuD,EAAAA,EAAAA,KAAA,OAAKF,UAAU,gBAAgB+B,SAAS,KAAKzB,KAAK,SAAQL,UACxDC,EAAAA,EAAAA,KAAA,OAAKF,UAAU,eAAeM,KAAK,WAAUL,UAC3CF,EAAAA,EAAAA,MAAA,OAAKC,UAAU,gBAAeC,SAAA,EAC5BC,EAAAA,EAAAA,KAAA,OAAKF,UAAU,eAAcC,UAC3BC,EAAAA,EAAAA,KAAA,MAAIF,UAAU,cAAaC,SAAC,6BAE9BC,EAAAA,EAAAA,KAAA,OAAKF,UAAU,aAAYC,UACzBF,EAAAA,EAAAA,MAAA,KAAGC,UAAU,2BAA0BC,SAAA,CAAC,2BACb,KACzBC,EAAAA,EAAAA,KAAA,UAAAD,SAASlD,EAAY,WAAa,eAAsB,MAAI,KAC5DmD,EAAAA,EAAAA,KAAA,UAAAD,SAAShD,IAAkB,WAG/B8C,EAAAA,EAAAA,MAAA,OAAKC,UAAU,eAAcC,SAAA,EAC3BC,EAAAA,EAAAA,KAAA,UACE9B,KAAK,SACL4B,UAAU,oBACVI,QAASA,IAAMxD,GAAoB,GAAOqD,SAC3C,QAGDC,EAAAA,EAAAA,KAAA,UACE9B,KAAK,SACL4B,UAAU,kBACVI,QA9UYhD,UAC1BqB,EAAEiC,iBACF,IACE,MAAMlD,EAAST,EAAY,IAAM,IAC3BY,QAAiBgD,EAAAA,EAAAA,IAAW,GAADC,OAC5BC,EAAAA,GAAU,YAAAD,OAAW/D,EAAY,YAAA+D,OAAWpD,IAGzB,MAApBG,EAASH,QACXU,EACEP,EAASQ,SAAW,+BACpB,WAEFhB,IACAP,GAAoB,GACpBE,EAAgB,MAChBE,GAAa,IAEbkB,GACU,OAARP,QAAQ,IAARA,OAAQ,EAARA,EAAUQ,UAAW,6CACrB,QAGN,CAAE,MAAOH,GAAQ,IAADgE,EACdjE,QAAQC,MAAM,yBAA0BA,GACxCE,GACO,OAALF,QAAK,IAALA,GAAe,QAAVgE,EAALhE,EAAOL,gBAAQ,IAAAqE,OAAV,EAALA,EAAiB7D,UACf,+CACF,QAEJ,GAgT2C8B,SAC9B,oBAQP,C","sources":["views/CmsPages/Hotel/HotelType/index.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport { GET_HOTEL_TYPE, HOTEL_TYPE } from \"../../../../config/apiConfig\";\r\nimport {\r\n  getRequest,\r\n  postRequest,\r\n  putRequest,\r\n} from \"../../../../service/apiService\";\r\nimport Popup from \"../../../../components/popup\";\r\n\r\nconst Package = () => {\r\n  const [formData, setFormData] = useState({\r\n    hotelTypeName: \"\",\r\n    noOfStar: \"\",\r\n  });\r\n  const [editMode, setEditMode] = useState(false);\r\n  const [popup, setPopup] = useState(\"\");\r\n  const [popupMessage, setPopupMessage] = useState(\"\");\r\n  const [editId, setEditId] = useState(null);\r\n  const [showForm, setShowForm] = useState(false);\r\n  const [currentPage, setCurrentPage] = useState(1);\r\n  const [hotelData, setHotelData] = useState([]);\r\n  const [loading, setLoading] = useState(false);\r\n  const resultsPerPage = 10;\r\n  const [totalPages, setTotalPages] = useState(1);\r\n  const [searchQuery, setSearchQuery] = useState(\"\");\r\n  const [showConfirmation, setShowConfirmation] = useState(false);\r\n  const [selectedItem, setSelectedItem] = useState(null);\r\n  const [newStatus, setNewStatus] = useState(false);\r\n  const [itemName, setItemName] = useState(\"\");\r\n\r\n  const fetchHotelData = async () => {\r\n    setLoading(true);\r\n    try {\r\n      const data = await getRequest(GET_HOTEL_TYPE);\r\n      if (data.status === 200 && Array.isArray(data.response)) {\r\n        setHotelData(data.response);\r\n        setTotalPages(Math.ceil(data.response.length / resultsPerPage));\r\n      } else {\r\n        console.error(\"Unexpected API response format:\", data);\r\n        setHotelData([]);\r\n        setTotalPages(1);\r\n      }\r\n    } catch (error) {\r\n      console.error(\"Error fetching hotel data:\", error);\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    fetchHotelData();\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    setCurrentPage(1);\r\n  }, [searchQuery]);\r\n\r\n  const showPopup = (message, type = \"info\") => {\r\n    setPopupMessage({\r\n      message,\r\n      type,\r\n      onClose: () => {\r\n        setPopupMessage(null);\r\n      },\r\n    });\r\n  };\r\n\r\n  const handleCreateFormSubmit = async (e) => {\r\n    e.preventDefault();\r\n\r\n    if (formData.hotelTypeName && formData.noOfStar) {\r\n      const newHotelType = {\r\n        hotelTypeName: formData.hotelTypeName,\r\n        noOfStar: formData.noOfStar,\r\n      };\r\n\r\n      try {\r\n        const response = await postRequest(HOTEL_TYPE, newHotelType);\r\n\r\n        if (response.status === 200) {\r\n          showPopup(\r\n            response.message || \"HotelType added successfully!\",\r\n            \"success\"\r\n          );\r\n          setFormData({ hotelTypeName: \"\", noOfStar: \"\" });\r\n          setShowForm(false);\r\n          fetchHotelData();\r\n        } else {\r\n          showPopup(\r\n            response.message || \"Failed to add HotelType. Please try again.\",\r\n            \"error\"\r\n          );\r\n        }\r\n      } catch (error) {\r\n        console.error(\"Error adding HotelType:\", error);\r\n        showPopup(\r\n          error.response?.message ||\r\n            \"An error occurred while adding the HotelType.\",\r\n          \"error\"\r\n        );\r\n      }\r\n    } else {\r\n      alert(\"Please fill out all required fields.\");\r\n    }\r\n  };\r\n\r\n  const handleInputChange = (e) => {\r\n    const { id, value } = e.target;\r\n    if (id === \"search\") {\r\n      setSearchQuery(value);\r\n    } else {\r\n      setFormData((prevData) => ({ ...prevData, [id]: value }));\r\n    }\r\n  };\r\n\r\n  const handleEdit = (item) => {\r\n    setFormData({\r\n      hotelTypeName: item.hotelTypeName,\r\n      noOfStar: item.noOfStar,\r\n    });\r\n    setEditId(item.id);\r\n    setEditMode(true);\r\n    setShowForm(true);\r\n  };\r\n\r\n  const handleUpdateFormSubmit = async (e) => {\r\n    e.preventDefault();\r\n    try {\r\n      const response = await putRequest(`${HOTEL_TYPE}/${editId}`, formData);\r\n      if (response.status === 200) {\r\n        showPopup(\r\n          response?.message || \"HotelType updated successfully!\",\r\n          \"success\"\r\n        );\r\n        fetchHotelData();\r\n        setShowForm(false);\r\n        setEditMode(false);\r\n        setEditId(null);\r\n        setFormData({ hotelTypeName: \"\", noOfStar: \"\" });\r\n      } else {\r\n        showPopup(\r\n          response?.message || \"Failed to update HotelType. Please try again.\",\r\n          \"error\"\r\n        );\r\n      }\r\n    } catch (error) {\r\n      console.error(\"Error updating HotelType:\", error);\r\n      showPopup(\r\n        error?.response?.message ||\r\n          \"An error occurred while updating the HotelType.\",\r\n        \"error\"\r\n      );\r\n    }\r\n  };\r\n\r\n  const handleStatusChange = (id, status, hotelTypeName) => {\r\n    setSelectedItem(id);\r\n    setNewStatus(status);\r\n    setItemName(hotelTypeName);\r\n    setShowConfirmation(true);\r\n  };\r\n\r\n  const confirmStatusChange = async (e) => {\r\n    e.preventDefault();\r\n    try {\r\n      const status = newStatus ? \"y\" : \"n\";\r\n      const response = await putRequest(\r\n        `${HOTEL_TYPE}/status/${selectedItem}?status=${status}`\r\n      );\r\n\r\n      if (response.status === 200) {\r\n        showPopup(\r\n          response.message || \"Status updated successfully!\",\r\n          \"success\"\r\n        );\r\n        fetchHotelData();\r\n        setShowConfirmation(false);\r\n        setSelectedItem(null);\r\n        setNewStatus(false);\r\n      } else {\r\n        showPopup(\r\n          response?.message || \"Failed to update status. Please try again.\",\r\n          \"error\"\r\n        );\r\n      }\r\n    } catch (error) {\r\n      console.error(\"Error updating status:\", error);\r\n      showPopup(\r\n        error?.response?.message ||\r\n          \"An error occurred while updating the status.\",\r\n        \"error\"\r\n      );\r\n    }\r\n  };\r\n\r\n  const handlePrevious = () => {\r\n    if (currentPage > 1) {\r\n      setCurrentPage(currentPage - 1);\r\n    }\r\n  };\r\n\r\n  const handleNext = () => {\r\n    if (currentPage < filteredTotalPages) {\r\n      setCurrentPage(currentPage + 1);\r\n    }\r\n  };\r\n\r\n  const filterHotelType = (hotelTypes) => {\r\n    if (!searchQuery.trim()) return hotelTypes;\r\n  \r\n    return hotelTypes.filter((item) => {\r\n      const hotelTypeName = item.hotelTypeName?.toLowerCase() || \"\";\r\n      const noOfStar = String(item.noOfStar || \"\").toLowerCase();\r\n      const status = item.status?.toLowerCase() || \"\";\r\n  \r\n      return (\r\n        hotelTypeName.includes(searchQuery.toLowerCase()) ||\r\n        noOfStar.includes(searchQuery.toLowerCase()) ||\r\n        status.includes(searchQuery.toLowerCase())\r\n      );\r\n    });\r\n  };\r\n  \r\n  const filteredHotelTypes = filterHotelType(hotelData);\r\n  const totalFilteredProducts = filteredHotelTypes.length;\r\n  const filteredTotalPages = Math.ceil(totalFilteredProducts / resultsPerPage);\r\n  const indexOfLastHotelType = currentPage * resultsPerPage;\r\n  const indexOfFirstHotelType = indexOfLastHotelType - resultsPerPage;\r\n  const currentHotelTypes = filteredHotelTypes.slice(\r\n    indexOfFirstHotelType,\r\n    indexOfLastHotelType\r\n  );\r\n  \r\n\r\n  return (\r\n    <div className=\"content-wrapper\">\r\n      <div className=\"row\">\r\n        <div className=\"col-12 grid-margin stretch-card\">\r\n          {popupMessage && (\r\n            <Popup\r\n              message={popupMessage.message}\r\n              type={popupMessage.type}\r\n              onClose={popupMessage.onClose}\r\n            />\r\n          )}\r\n          <div className=\"card form-card\">\r\n            <div className=\"card-header d-flex justify-content-between align-items-center\">\r\n              <h4 className=\"card-title\">Hotel Type</h4>\r\n              <div>\r\n                {!showForm ? (\r\n                  <>\r\n                    <form className=\"d-inline-block serachform\" role=\"search\">\r\n                      <div className=\"input-group searchinput\">\r\n                        <input\r\n                          type=\"search\"\r\n                          className=\"form-control\"\r\n                          placeholder=\"Search\"\r\n                          aria-label=\"Search\"\r\n                          aria-describedby=\"search-icon\"\r\n                          id=\"search\"\r\n                          value={searchQuery}\r\n                          onChange={handleInputChange}\r\n                        />\r\n                        <span className=\"input-group-text\" id=\"search-icon\">\r\n                          <i className=\"mdi mdi-magnify\"></i>\r\n                        </span>\r\n                      </div>\r\n                    </form>\r\n                    <button\r\n                      type=\"button\"\r\n                      className=\"btn btn-success me-2\"\r\n                      onClick={() => setShowForm(true)}\r\n                    >\r\n                      <i className=\"mdi mdi-plus\"></i> Create\r\n                    </button>\r\n                    <button type=\"button\" className=\"btn btn-warning me-2\">\r\n                      <i className=\"mdi mdi-restore\"></i> Refresh\r\n                    </button>\r\n                  </>\r\n                ) : (\r\n                  <button\r\n                    type=\"button\"\r\n                    className=\"btn btn-secondary\"\r\n                    onClick={() => setShowForm(false)}\r\n                  >\r\n                    <i className=\"mdi mdi-arrow-left\"></i> Back\r\n                  </button>\r\n                )}\r\n              </div>\r\n            </div>\r\n            <div className=\"card-body\">\r\n              {!showForm ? (\r\n                <>\r\n                  {loading ? (\r\n                    <div>Loading...</div>\r\n                  ) : (\r\n                    <div className=\"table-responsive packagelist\">\r\n                      <table className=\"table table-bordered table-hover align-middle\">\r\n                        <thead className=\"table-light\">\r\n                          <tr>\r\n                            <th>Sr. No.</th>\r\n                            <th>Name</th>\r\n                            <th>Description</th>\r\n                            <th>Edit</th>\r\n                            <th>Status</th>\r\n                          </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                          {currentHotelTypes.length > 0 ? (\r\n                            currentHotelTypes.map((item, index) => (\r\n                              <tr key={item.id}>\r\n                                <td>{indexOfFirstHotelType + index + 1}</td>\r\n                                <td>{item.hotelTypeName}</td>\r\n                                <td>{item.noOfStar}</td>\r\n                                <td>\r\n                                  <button\r\n                                    className={`btn btn-sm btn-success me-2 ${\r\n                                      item.status === \"n\" ? \"disabled\" : \"\"\r\n                                    }`}\r\n                                    disabled={item.status === \"n\"}\r\n                                    onClick={() => {\r\n                                      if (item.status === \"y\") {\r\n                                        handleEdit(item);\r\n                                      }\r\n                                    }}\r\n                                  >\r\n                                    <i className=\"mdi mdi-square-edit-outline\"></i>\r\n                                  </button>\r\n                                </td>\r\n                                <td>\r\n                                  <div className=\"form-check form-switch\">\r\n                                    <input\r\n                                      className=\"form-check-input\"\r\n                                      type=\"checkbox\"\r\n                                      checked={item.status === \"y\"}\r\n                                      onChange={() =>\r\n                                        handleStatusChange(\r\n                                          item.id,\r\n                                          item.status !== \"y\",\r\n                                          item.hotelTypeName\r\n                                        )\r\n                                      }\r\n                                    />\r\n                                    <label className=\"form-check-label px-0\">\r\n                                      {item.status === \"y\"\r\n                                        ? \"Active\"\r\n                                        : \"Deactivated\"}\r\n                                    </label>\r\n                                  </div>\r\n                                </td>\r\n                              </tr>\r\n                            ))\r\n                          ) : (\r\n                            <tr>\r\n                              <td colSpan=\"5\" className=\"text-center\">\r\n                                No matching records found.\r\n                              </td>\r\n                            </tr>\r\n                          )}\r\n                        </tbody>\r\n                      </table>\r\n                    </div>\r\n                  )}\r\n                  <nav className=\"d-flex justify-content-between align-items-center mt-3\">\r\n                    <div>\r\n                      <span>\r\n                        Page {currentPage} of {totalPages} | Total Products:{\" \"}\r\n                        {hotelData.length}\r\n                      </span>\r\n                    </div>\r\n                    <ul className=\"pagination mb-0\">\r\n                      <li\r\n                        className={`page-item ${\r\n                          currentPage === 1 ? \"disabled\" : \"\"\r\n                        }`}\r\n                      >\r\n                        <button className=\"page-link\" onClick={handlePrevious}>\r\n                          &laquo;\r\n                        </button>\r\n                      </li>\r\n                      {[...Array(totalPages)].map((_, index) => (\r\n                        <li\r\n                          className={`page-item ${\r\n                            currentPage === index + 1 ? \"active\" : \"\"\r\n                          }`}\r\n                          key={index}\r\n                        >\r\n                          <button\r\n                            className=\"page-link\"\r\n                            onClick={() => setCurrentPage(index + 1)}\r\n                          >\r\n                            {index + 1}\r\n                          </button>\r\n                        </li>\r\n                      ))}\r\n                      <li\r\n                        className={`page-item ${\r\n                          currentPage === totalPages ? \"disabled\" : \"\"\r\n                        }`}\r\n                      >\r\n                        <button className=\"page-link\" onClick={handleNext}>\r\n                          &raquo;\r\n                        </button>\r\n                      </li>\r\n                    </ul>\r\n                  </nav>\r\n                </>\r\n              ) : (\r\n                <>\r\n                  {showForm && (\r\n                    <form\r\n                      className=\"forms row\"\r\n                      onSubmit={\r\n                        editMode\r\n                          ? handleUpdateFormSubmit\r\n                          : handleCreateFormSubmit\r\n                      }\r\n                    >\r\n                      <div className=\"form-group col-md-4\">\r\n                        <label htmlFor=\"hotelTypeName\">\r\n                          Hotel Type Name <span className=\"text-danger\">*</span>\r\n                        </label>\r\n                        <input\r\n                          type=\"text\"\r\n                          required\r\n                          className=\"form-control\"\r\n                          id=\"hotelTypeName\"\r\n                          placeholder=\"Hotel Type Name\"\r\n                          onChange={handleInputChange}\r\n                          value={formData.hotelTypeName}\r\n                        />\r\n                      </div>\r\n                      <div className=\"form-group col-md-4\">\r\n                      <label>\r\n                          No. Of Star <span className=\"text-danger \">*</span>\r\n                        </label>\r\n                        <input\r\n                          type=\"text\"\r\n                          required\r\n                          className=\"form-control\"\r\n                          id=\"noOfStar\"\r\n                          placeholder=\"No. of Star\"\r\n                          onChange={handleInputChange}\r\n                          value={formData.noOfStar}\r\n                        />\r\n                      </div>\r\n                      \r\n                      <div className=\"form-group col-md-12 d-flex justify-content-end\">\r\n                        <button\r\n                          type=\"submit\"\r\n                          className=\"btn btn-primary me-2\"\r\n                          disabled={!formData.hotelTypeName}\r\n                        >\r\n                          {editMode ? \"Save Changes\" : \"Submit\"}\r\n                        </button>\r\n                        <button\r\n                          type=\"button\"\r\n                          className=\"btn btn-danger\"\r\n                          onClick={() => setShowForm(false)}\r\n                        >\r\n                          Cancel\r\n                        </button>\r\n                      </div>\r\n                    </form>\r\n                  )}\r\n                </>\r\n              )}\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      {showConfirmation && (\r\n        <div className=\"modal d-block\" tabIndex=\"-1\" role=\"dialog\">\r\n          <div className=\"modal-dialog\" role=\"document\">\r\n            <div className=\"modal-content\">\r\n              <div className=\"modal-header\">\r\n                <h5 className=\"modal-title\">Confirm Status Change</h5>\r\n              </div>\r\n              <div className=\"modal-body\">\r\n                <p className=\"text-lg mb-4 text-center\">\r\n                  Are you sure you want to{\" \"}\r\n                  <strong>{newStatus ? \"Activate\" : \"Deactivate\"}</strong> To{\" \"}\r\n                  <strong>{itemName}</strong> ?\r\n                </p>\r\n              </div>\r\n              <div className=\"modal-footer\">\r\n                <button\r\n                  type=\"button\"\r\n                  className=\"btn btn-secondary\"\r\n                  onClick={() => setShowConfirmation(false)}\r\n                >\r\n                  No\r\n                </button>\r\n                <button\r\n                  type=\"button\"\r\n                  className=\"btn btn-primary\"\r\n                  onClick={confirmStatusChange}\r\n                >\r\n                  Yes\r\n                </button>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Package;\r\n"],"names":["Package","formData","setFormData","useState","hotelTypeName","noOfStar","editMode","setEditMode","popup","setPopup","popupMessage","setPopupMessage","editId","setEditId","showForm","setShowForm","currentPage","setCurrentPage","hotelData","setHotelData","loading","setLoading","totalPages","setTotalPages","searchQuery","setSearchQuery","showConfirmation","setShowConfirmation","selectedItem","setSelectedItem","newStatus","setNewStatus","itemName","setItemName","fetchHotelData","async","data","getRequest","GET_HOTEL_TYPE","status","Array","isArray","response","Math","ceil","length","console","error","useEffect","showPopup","message","type","arguments","undefined","onClose","handleInputChange","e","id","value","target","prevData","_objectSpread","filteredHotelTypes","hotelTypes","trim","filter","item","_item$hotelTypeName","_item$status","toLowerCase","String","includes","totalFilteredProducts","filteredTotalPages","indexOfLastHotelType","indexOfFirstHotelType","currentHotelTypes","slice","_jsxs","className","children","_jsx","Popup","onClick","_Fragment","role","placeholder","onChange","onSubmit","preventDefault","putRequest","concat","HOTEL_TYPE","_error$response2","newHotelType","postRequest","_error$response","alert","htmlFor","required","disabled","map","index","handleEdit","checked","handleStatusChange","colSpan","handlePrevious","_","handleNext","tabIndex","_error$response3"],"sourceRoot":""}