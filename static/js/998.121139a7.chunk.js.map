{"version":3,"file":"static/js/998.121139a7.chunk.js","mappings":"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","sources":["components/loader/loader.js","views/Login/index.js"],"sourcesContent":["import React from 'react';\r\nimport Loaderimage from '../../asset/images/Animation - 1735037321858.gif';\r\nconst Loader = () => {\r\n  return (\r\n    <div className=\"loader-wrapper\">\r\n    <div className=\"loader\">\r\n      <div className=\"loader4\">\r\n        <img src={Loaderimage}></img>\r\n      </div>\r\n    </div>\r\n  </div>\r\n);\r\n};\r\nexport default Loader;","import React, {Suspense, useState} from 'react';\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport Loader from '../../components/loader/loader';\r\nimport './login.css'\r\nimport {postRequest} from \"../../service/apiService\";\r\nimport {LOGIN} from \"../../config/apiConfig\";\r\nconst Login = () => {\r\n    const navigate = useNavigate();\r\n    const [formData, setFormData] = useState({ username: \"\", password: \"\",role:\"101\", rememberMe: false,});\r\n    const handleLogin = async (event) => {\r\n        event.preventDefault();\r\n        // Add your login logic here\r\n        const response = await postRequest(LOGIN, formData);\r\n        const loginResp=response.response;\r\n        // debugger;\r\n        if(loginResp.jwtToken){\r\n            if(formData.rememberMe){\r\n                localStorage.setItem('token',loginResp.jwtToken);\r\n                localStorage.setItem('role',loginResp.role);\r\n                localStorage.setItem('username',loginResp.username);\r\n            }else{\r\n                sessionStorage.setItem('token',loginResp.jwtToken);\r\n                sessionStorage.setItem('role',loginResp.role);\r\n                sessionStorage.setItem('username',loginResp.username);\r\n            }\r\n\r\n            // Redirect to the dashboard\r\n            navigate(\"/dashboard\");\r\n        }\r\n\r\n    };\r\n    const handleInputChange = (e) => {\r\n        const { name, value, type, checked } = e.target;\r\n        setFormData((prevFormData) => ({\r\n            ...prevFormData,\r\n            [name]: type === \"checkbox\" ? checked : value,\r\n        }));\r\n        // debugger;\r\n    };\r\n\r\n\r\n  return (\r\n    <Suspense fallback={<div className='mainloader'><Loader /></div>}>\r\n    <div className=\"container-scroller\">\r\n    <div className=\"container-fluid page-body-wrapper full-page-wrapper px-0\">\r\n        <div className=\"row w-100 m-0\">\r\n        <div className=\"content-wrapper full-page-wrapper d-flex align-items-center auth login-bg\">\r\n            <div className=\"card col-lg-4 mx-auto\">\r\n            <div className=\"card-body px-5 py-5\">\r\n                <h3 className=\"text-center mb-3\">Login</h3>\r\n                <form>\r\n                    <div className=\"form-group\">\r\n                        <label>Username or email *</label>\r\n                        <input type=\"text\" className=\"form-control p_input\" name=\"username\" onChange={handleInputChange}\r\n                               required value={formData.username}/>\r\n                    </div>\r\n                    <div className=\"form-group\">\r\n                        <label>Password *</label>\r\n                        <input type=\"password\" className=\"form-control p_input\" name=\"password\"\r\n                               value={formData.password} onChange={handleInputChange} required/>\r\n                    </div>\r\n                    <div className=\"form-group d-flex align-items-center justify-content-between\">\r\n                        <div className=\"form-check\">\r\n                            <input type=\"checkbox\" name =\"rememberMe\"  className=\"form-check-input\" value={formData.rememberMe} onChange={handleInputChange}/>\r\n                            <label className=\"form-check-label\">\r\n                                Remember me\r\n                            </label>\r\n                        </div>\r\n                        <a href=\"#\" className=\"forgot-pass\">\r\n                            Forgot password\r\n                        </a>\r\n                    </div>\r\n                    <div className=\"text-center\">\r\n                        <button\r\n                            type=\"submit\"\r\n                            className=\"btn btn-primary btn-block enter-btn\"\r\n                            onClick={handleLogin}\r\n                        >\r\n                            Login\r\n                        </button>\r\n                    </div>\r\n                    <p className=\"sign-up\">\r\n                        Don't have an Account?<a href=\"#\"> Sign Up</a>\r\n                    </p>\r\n                </form>\r\n            </div>\r\n            </div>\r\n        </div>\r\n            {/* content-wrapper ends */}\r\n        </div>\r\n        {/* row ends */}\r\n    </div>\r\n        {/* page-body-wrapper ends */}\r\n    </div>\r\n    </Suspense>\r\n  );\r\n};\r\nexport default Login;\r\n"],"names":["Loader","_jsx","className","children","src","Loaderimage","Login","navigate","useNavigate","formData","setFormData","useState","username","password","role","rememberMe","handleInputChange","e","name","value","type","checked","target","prevFormData","_objectSpread","Suspense","fallback","_jsxs","onChange","required","href","onClick","async","event","preventDefault","loginResp","postRequest","LOGIN","response","jwtToken","localStorage","setItem","sessionStorage"],"sourceRoot":""}