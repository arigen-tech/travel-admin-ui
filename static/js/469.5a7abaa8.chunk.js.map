{"version":3,"file":"static/js/469.5a7abaa8.chunk.js","mappings":"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","sources":["views/CmsPages/Hotel/HotelType/index.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport { GET_HOTEL_TYPE, SET_HOTEL_TYPE, UPDATE_HOTEL_TYPE } from \"../../../../config/apiConfig\";\r\nimport { getRequest, postRequest, putRequest } from \"../../../../service/apiService\";\r\n\r\nconst Package = () => {\r\n    const [formData, setFormData] = useState({ hotelType: \"\", description: \"\", status: \"y\" });\r\n    const [showForm, setShowForm] = useState(false);\r\n    const [currentPage, setCurrentPage] = useState(1);\r\n    const [editingRow, setEditingRow] = useState(-1);\r\n    const [editedHotel, setEditedHotel] = useState(null);\r\n    const [hotelData, setHotelData] = useState([]);\r\n    const [loading, setLoading] = useState(false);\r\n    const resultsPerPage = 10; // Show 10 results per page\r\n    const [totalPages, setTotalPages] = useState(1);\r\n\r\n    // Fetch hotel data\r\n    const fetchHotelData = async () => {\r\n        setLoading(true);\r\n        try {\r\n            const data = await getRequest(GET_HOTEL_TYPE);\r\n            if (data.status === 200 && Array.isArray(data.response)) {\r\n                setHotelData(data.response); // Set the 'response' array to state\r\n                setTotalPages(Math.ceil(data.response.length / resultsPerPage)); // Calculate total pages\r\n            } else {\r\n                console.error(\"Unexpected API response format:\", data);\r\n                setHotelData([]);\r\n                setTotalPages(1);\r\n            }\r\n        } catch (error) {\r\n            console.error(\"Error fetching hotel data:\", error);\r\n        } finally {\r\n            setLoading(false);\r\n        }\r\n    };\r\n\r\n    useEffect(() => {\r\n        fetchHotelData();\r\n    }, []);\r\n\r\n    const handleInputChange = (e) => {\r\n        const { name, value } = e.target;\r\n        setFormData((prevFormData) => ({\r\n            ...prevFormData,\r\n            [name]: value,\r\n        }));\r\n    };\r\n\r\n    const addHotelType = async (e) => {\r\n        e.preventDefault();\r\n        if (formData.hotelType && formData.description) {\r\n            const newHotelType = {\r\n                hotelTypeName: formData.hotelType,\r\n                description: formData.description,\r\n                status: formData.status,\r\n                createDt: new Date().toISOString(),\r\n                createdBy: \"system\", // Example value, replace with dynamic user info if available\r\n                updatedDt: new Date().toISOString(),\r\n            };\r\n            try {\r\n                const response = await postRequest(SET_HOTEL_TYPE, newHotelType);\r\n                if (response.status === 200) {\r\n                    alert(\"Hotel type added successfully!\");\r\n                    setFormData({ hotelType: \"\", description: \"\", status: \"y\" }); // Reset form\r\n                    setShowForm(false); // Close form\r\n                    fetchHotelData(); // Refresh hotel data\r\n                } else {\r\n                    alert(\"Failed to add hotel type. Please try again.\");\r\n                }\r\n            } catch (error) {\r\n                console.error(\"Error adding hotel type:\", error);\r\n                alert(\"An error occurred while adding hotel type.\");\r\n            }\r\n        } else {\r\n            alert(\"Please fill out all required fields.\");\r\n        }\r\n    };\r\n\r\n    const handlePrevious = () => {\r\n        if (currentPage > 1) {\r\n            setCurrentPage(currentPage - 1);\r\n        }\r\n    };\r\n\r\n    const handleNext = () => {\r\n        if (currentPage < totalPages) {\r\n            setCurrentPage(currentPage + 1);\r\n        }\r\n    };\r\n\r\n    // Paginate hotel data\r\n    const paginatedData = hotelData.slice(\r\n        (currentPage - 1) * resultsPerPage,\r\n        currentPage * resultsPerPage\r\n    );\r\n    async function removeHotelType(id) {\r\n        if (!id) {\r\n            alert(\"Invalid hotel type ID.\");\r\n            return;\r\n        }\r\n\r\n        try {\r\n            const editHotelType = {\r\n                ...hotelData.find((hotel) => hotel.id === id),\r\n                status: \"n\",\r\n                updatedDt: new Date().toISOString(),\r\n            };\r\n\r\n            const response = await putRequest(`${UPDATE_HOTEL_TYPE}/${id}`, editHotelType);\r\n\r\n            if (response.status === 200) {\r\n                alert(\"Hotel type removed successfully!\");\r\n                fetchHotelData(); // Refresh the data\r\n            } else {\r\n                alert(\"Failed to remove hotel type. Please try again.\");\r\n            }\r\n        } catch (error) {\r\n            console.error(\"Error removing hotel type:\", error);\r\n            alert(\"An error occurred while removing hotel type.\");\r\n        }\r\n    }\r\n\r\n    async function updateHotelData(hotel) {\r\n        if (!hotel.id) {\r\n            alert(\"Invalid hotel type ID.\");\r\n            return;\r\n        }\r\n\r\n        try {\r\n            const editHotelType = {\r\n                ...hotelData.find((selHotel) => hotel.id === selHotel.id),\r\n                hotelTypeName: hotel.hotelTypeName,\r\n                description: hotel.description,\r\n                updatedDt: new Date().toISOString(),\r\n            };\r\n\r\n            const response = await putRequest(`${UPDATE_HOTEL_TYPE}/${hotel.id}`, editHotelType);\r\n\r\n            if (response.status === 200) {\r\n                alert(\"Hotel type Updated successfully!\");\r\n                setEditingRow(-1);\r\n                fetchHotelData(); // Refresh the data\r\n            } else {\r\n                alert(\"Failed to remove hotel type. Please try again.\");\r\n            }\r\n        } catch (error) {\r\n            console.error(\"Error removing hotel type:\", error);\r\n            alert(\"An error occurred while removing hotel type.\");\r\n        }\r\n        console.log(hotel);\r\n    }\r\n\r\n    return (\r\n        <div className=\"content-wrapper\">\r\n            <div className=\"row\">\r\n                <div className=\"col-12 grid-margin stretch-card\">\r\n                    <div className=\"card form-card\">\r\n                        <div className=\"card-header d-flex justify-content-between align-items-center\">\r\n                            <h4 className=\"card-title\">Hotel Type</h4>\r\n                            <div>\r\n                                {!showForm ? (\r\n                                    <>\r\n                                        <button\r\n                                            type=\"button\"\r\n                                            className=\"btn btn-success me-2\"\r\n                                            onClick={() => setShowForm(true)}\r\n                                        >\r\n                                            <i className=\"mdi mdi-plus\"></i> Create\r\n                                        </button>\r\n                                        <button\r\n                                            type=\"button\"\r\n                                            className=\"btn btn-warning me-2\"\r\n                                            onClick={fetchHotelData}\r\n                                        >\r\n                                            <i className=\"mdi mdi-restore\"></i> Refresh\r\n                                        </button>\r\n                                    </>\r\n                                ) : (\r\n                                    <button\r\n                                        type=\"button\"\r\n                                        className=\"btn btn-secondary\"\r\n                                        onClick={() => setShowForm(false)}\r\n                                    >\r\n                                        <i className=\"mdi mdi-arrow-left\"></i> Back\r\n                                    </button>\r\n                                )}\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"card-body\">\r\n                            {!showForm ? (\r\n                                <>\r\n                                    {loading ? (\r\n                                        <div>Loading...</div>\r\n                                    ) : (\r\n                                        <div className=\"table-responsive packagelist\">\r\n                                            <table className=\"table table-bordered table-hover align-middle\">\r\n                                                <thead className=\"table-light\">\r\n                                                    <tr>\r\n                                                        <th>S.No.</th>\r\n                                                        <th>Hotel Type</th>\r\n                                                        <th>Description</th>\r\n                                                        <th>Action</th>\r\n                                                    </tr>\r\n                                                </thead>\r\n                                                <tbody>\r\n                                                    {paginatedData.length > 0 ? (\r\n                                                        paginatedData.map((hotel, index) => (\r\n                                                            <tr key={index}>\r\n                                                                <td>{(currentPage - 1) * resultsPerPage + index + 1}</td>\r\n                                                                {/*<td>{hotel.hotelTypeName}</td>*/}\r\n                                                                <td>\r\n                                                                    {editingRow === hotel.id ? (\r\n                                                                        <input\r\n                                                                            type=\"text\"\r\n                                                                            className=\"form-control\"\r\n                                                                            value={hotel.hotelTypeName}\r\n                                                                            onChange={(e) =>\r\n                                                                                setHotelData((prevData) =>\r\n                                                                                    prevData.map((h) =>\r\n                                                                                        h.id === hotel.id\r\n                                                                                            ? {\r\n                                                                                                ...h,\r\n                                                                                                hotelTypeName: e.target.value\r\n                                                                                            }\r\n                                                                                            : h\r\n                                                                                    )\r\n                                                                                )\r\n                                                                            }\r\n                                                                        />\r\n                                                                    ) : (\r\n                                                                        hotel.hotelTypeName\r\n                                                                    )}\r\n                                                                </td>\r\n                                                                {/*<td>{hotel.description}</td>*/}\r\n                                                                <td>\r\n                                                                    {editingRow === hotel.id ? (\r\n                                                                        <input\r\n                                                                            type=\"text\"\r\n                                                                            className=\"form-control\"\r\n                                                                            value={hotel.description}\r\n                                                                            onChange={(e) =>\r\n                                                                                setHotelData((prevData) =>\r\n                                                                                    prevData.map((h) =>\r\n                                                                                        h.id === hotel.id\r\n                                                                                            ? {\r\n                                                                                                ...h,\r\n                                                                                                description: e.target.value\r\n                                                                                            }\r\n                                                                                            : h\r\n                                                                                    )\r\n                                                                                )\r\n                                                                            }\r\n                                                                        />\r\n                                                                    ) : (\r\n                                                                        hotel.description\r\n                                                                    )}\r\n                                                                </td>\r\n                                                                {/*<td>*/}\r\n                                                                {/*    <button className=\"btn btn-sm btn-success me-2\">*/}\r\n                                                                {/*        <i className=\"mdi mdi-square-edit-outline\"></i>*/}\r\n                                                                {/*    </button>*/}\r\n                                                                {/*    <button className=\"btn btn-sm btn-danger\"*/}\r\n                                                                {/*            onClick={() => removeHotelType(hotel.id)}>*/}\r\n                                                                {/*        <i className=\"mdi mdi-trash-can\"></i>*/}\r\n                                                                {/*    </button>*/}\r\n                                                                {/*</td>*/}\r\n                                                                <td>\r\n                                                                    {editingRow === hotel.id ? (\r\n                                                                        <><button\r\n                                                                            className=\"btn btn-sm btn-primary me-2\"\r\n                                                                            onClick={() => updateHotelData(hotel)}>\r\n                                                                            Save\r\n                                                                        </button>\r\n                                                                            <button\r\n                                                                                className=\"btn btn-sm btn-secondary me-2\"\r\n                                                                                onClick={() => {\r\n                                                                                    setHotelData((prevData) =>\r\n                                                                                        prevData.map((h) => (h.id === editedHotel.id ? editedHotel : h))\r\n                                                                                    );\r\n                                                                                    setEditingRow(null);\r\n                                                                                }}\r\n                                                                            >\r\n                                                                                Cancel\r\n                                                                            </button>\r\n                                                                        </>\r\n                                                                    ) : (\r\n                                                                        <button\r\n                                                                            className=\"btn btn-sm btn-success me-2\"\r\n                                                                            onClick={() => {\r\n                                                                                setEditingRow(hotel.id);\r\n                                                                                setEditedHotel({ ...hotel });\r\n                                                                            }}>\r\n                                                                            <i className=\"mdi mdi-square-edit-outline\"></i>\r\n                                                                        </button>\r\n\r\n                                                                    )}\r\n                                                                    <button className=\"btn btn-sm btn-danger\"\r\n                                                                        onClick={() => removeHotelType(hotel.id)}>\r\n                                                                        <i className=\"mdi mdi-trash-can\"></i>\r\n                                                                    </button>\r\n                                                                </td>\r\n                                                            </tr>\r\n                                                        ))\r\n                                                    ) : (\r\n                                                        <tr>\r\n                                                            <td colSpan=\"4\" className=\"text-center\">\r\n                                                                No Data Available\r\n                                                            </td>\r\n                                                        </tr>\r\n                                                    )}\r\n                                                </tbody>\r\n                                            </table>\r\n                                        </div>\r\n                                    )}\r\n                                    <nav className=\"d-flex justify-content-between align-items-center mt-3\">\r\n                                        <div>\r\n                                            <span>\r\n                                                Page {currentPage} of {totalPages} | Total Products: {hotelData.length}\r\n                                            </span>\r\n                                        </div>\r\n                                        <ul className=\"pagination mb-0\">\r\n                                            <li className={`page-item ${currentPage === 1 ? \"disabled\" : \"\"}`}>\r\n                                                <button className=\"page-link\" onClick={handlePrevious}>\r\n                                                    &laquo;\r\n                                                </button>\r\n                                            </li>\r\n                                            {[...Array(totalPages)].map((_, index) => (\r\n                                                <li\r\n                                                    className={`page-item ${currentPage === index + 1 ? \"active\" : \"\"}`}\r\n                                                    key={index}\r\n                                                >\r\n                                                    <button\r\n                                                        className=\"page-link\"\r\n                                                        onClick={() => setCurrentPage(index + 1)}\r\n                                                    >\r\n                                                        {index + 1}\r\n                                                    </button>\r\n                                                </li>\r\n                                            ))}\r\n                                            <li className={`page-item ${currentPage === totalPages ? \"disabled\" : \"\"}`}>\r\n                                                <button className=\"page-link\" onClick={handleNext}>\r\n                                                    &raquo;\r\n                                                </button>\r\n                                            </li>\r\n                                        </ul>\r\n                                    </nav>\r\n                                </>\r\n                            ) : (\r\n                                <form className=\"forms row\" onSubmit={addHotelType}>\r\n                                    <div className=\"form-group col-md-12\">\r\n                                        <label>Hotel Type</label>\r\n                                        <input\r\n                                            type=\"text\"\r\n                                            className=\"form-control\"\r\n                                            name=\"hotelType\"\r\n                                            placeholder=\"Enter Hotel Type\"\r\n                                            value={formData.hotelType}\r\n                                            onChange={handleInputChange}\r\n                                            required\r\n                                        />\r\n                                    </div>\r\n                                    <div className=\"form-group col-md-12\">\r\n                                        <label>No. Of Star</label>\r\n                                        <input\r\n                                            type=\"text\"\r\n                                            className=\"form-control\"\r\n                                            name=\"description\"\r\n                                            placeholder=\"No. Of Star \"\r\n                                            value={formData.description}\r\n                                            onChange={handleInputChange}\r\n                                            required\r\n                                        />\r\n                                    </div>\r\n                                    <div className=\"form-group col-md-12 d-flex justify-content-end\">\r\n                                        <button type=\"submit\" className=\"btn btn-primary me-2\">\r\n                                            Submit\r\n                                        </button>\r\n                                        <button\r\n                                            type=\"button\"\r\n                                            className=\"btn btn-danger\"\r\n                                            onClick={() => setShowForm(false)}\r\n                                        >\r\n                                            Cancel\r\n                                        </button>\r\n                                    </div>\r\n                                </form>\r\n                            )}\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Package;\r\n"],"names":["Package","formData","setFormData","useState","hotelType","description","status","showForm","setShowForm","currentPage","setCurrentPage","editingRow","setEditingRow","editedHotel","setEditedHotel","hotelData","setHotelData","loading","setLoading","totalPages","setTotalPages","fetchHotelData","async","data","getRequest","GET_HOTEL_TYPE","Array","isArray","response","Math","ceil","length","console","error","useEffect","handleInputChange","e","name","value","target","prevFormData","_objectSpread","paginatedData","slice","_jsx","className","children","_jsxs","type","onClick","_Fragment","onSubmit","preventDefault","newHotelType","hotelTypeName","createDt","Date","toISOString","createdBy","updatedDt","postRequest","SET_HOTEL_TYPE","alert","placeholder","onChange","required","map","hotel","index","id","prevData","h","editHotelType","find","selHotel","putRequest","concat","UPDATE_HOTEL_TYPE","log","updateHotelData","removeHotelType","colSpan","handlePrevious","_","handleNext"],"sourceRoot":""}